//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18033.
// 
#pragma warning disable 1591

namespace WapXzone_VNM.AppPaymentInfo {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback add_MoneyByUsernameOperationCompleted;
        
        private System.Threading.SendOrPostCallback kick_UserOnlineOperationCompleted;
        
        private System.Threading.SendOrPostCallback setStatusUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback topupMoneyByPortalOperationCompleted;
        
        private System.Threading.SendOrPostCallback wapGetTopupListOperationCompleted;
        
        private System.Threading.SendOrPostCallback wapGetTopupListByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback wapTopupMoneyOperationCompleted;
        
        private System.Threading.SendOrPostCallback wapGetNotifyMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback testArrayOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::WapXzone_VNM.Properties.Settings.Default.WapXzone_VNM_AppPaymentInfo_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event add_MoneyByUsernameCompletedEventHandler add_MoneyByUsernameCompleted;
        
        /// <remarks/>
        public event kick_UserOnlineCompletedEventHandler kick_UserOnlineCompleted;
        
        /// <remarks/>
        public event setStatusUserCompletedEventHandler setStatusUserCompleted;
        
        /// <remarks/>
        public event getUserInfoCompletedEventHandler getUserInfoCompleted;
        
        /// <remarks/>
        public event topupMoneyByPortalCompletedEventHandler topupMoneyByPortalCompleted;
        
        /// <remarks/>
        public event wapGetTopupListCompletedEventHandler wapGetTopupListCompleted;
        
        /// <remarks/>
        public event wapGetTopupListByIDCompletedEventHandler wapGetTopupListByIDCompleted;
        
        /// <remarks/>
        public event wapTopupMoneyCompletedEventHandler wapTopupMoneyCompleted;
        
        /// <remarks/>
        public event wapGetNotifyMessageCompletedEventHandler wapGetNotifyMessageCompleted;
        
        /// <remarks/>
        public event testArrayCompletedEventHandler testArrayCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/add_MoneyByUsername", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string add_MoneyByUsername(string usergame, int money, string comment, string usr, string pass) {
            object[] results = this.Invoke("add_MoneyByUsername", new object[] {
                        usergame,
                        money,
                        comment,
                        usr,
                        pass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void add_MoneyByUsernameAsync(string usergame, int money, string comment, string usr, string pass) {
            this.add_MoneyByUsernameAsync(usergame, money, comment, usr, pass, null);
        }
        
        /// <remarks/>
        public void add_MoneyByUsernameAsync(string usergame, int money, string comment, string usr, string pass, object userState) {
            if ((this.add_MoneyByUsernameOperationCompleted == null)) {
                this.add_MoneyByUsernameOperationCompleted = new System.Threading.SendOrPostCallback(this.Onadd_MoneyByUsernameOperationCompleted);
            }
            this.InvokeAsync("add_MoneyByUsername", new object[] {
                        usergame,
                        money,
                        comment,
                        usr,
                        pass}, this.add_MoneyByUsernameOperationCompleted, userState);
        }
        
        private void Onadd_MoneyByUsernameOperationCompleted(object arg) {
            if ((this.add_MoneyByUsernameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.add_MoneyByUsernameCompleted(this, new add_MoneyByUsernameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/kick_UserOnline", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string kick_UserOnline(string usergame, string comment, string usr, string pass) {
            object[] results = this.Invoke("kick_UserOnline", new object[] {
                        usergame,
                        comment,
                        usr,
                        pass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void kick_UserOnlineAsync(string usergame, string comment, string usr, string pass) {
            this.kick_UserOnlineAsync(usergame, comment, usr, pass, null);
        }
        
        /// <remarks/>
        public void kick_UserOnlineAsync(string usergame, string comment, string usr, string pass, object userState) {
            if ((this.kick_UserOnlineOperationCompleted == null)) {
                this.kick_UserOnlineOperationCompleted = new System.Threading.SendOrPostCallback(this.Onkick_UserOnlineOperationCompleted);
            }
            this.InvokeAsync("kick_UserOnline", new object[] {
                        usergame,
                        comment,
                        usr,
                        pass}, this.kick_UserOnlineOperationCompleted, userState);
        }
        
        private void Onkick_UserOnlineOperationCompleted(object arg) {
            if ((this.kick_UserOnlineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.kick_UserOnlineCompleted(this, new kick_UserOnlineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setStatusUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string setStatusUser(string usergame, string status_old, string status_new, string phonenumber, string comment, string usr, string pass) {
            object[] results = this.Invoke("setStatusUser", new object[] {
                        usergame,
                        status_old,
                        status_new,
                        phonenumber,
                        comment,
                        usr,
                        pass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setStatusUserAsync(string usergame, string status_old, string status_new, string phonenumber, string comment, string usr, string pass) {
            this.setStatusUserAsync(usergame, status_old, status_new, phonenumber, comment, usr, pass, null);
        }
        
        /// <remarks/>
        public void setStatusUserAsync(string usergame, string status_old, string status_new, string phonenumber, string comment, string usr, string pass, object userState) {
            if ((this.setStatusUserOperationCompleted == null)) {
                this.setStatusUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetStatusUserOperationCompleted);
            }
            this.InvokeAsync("setStatusUser", new object[] {
                        usergame,
                        status_old,
                        status_new,
                        phonenumber,
                        comment,
                        usr,
                        pass}, this.setStatusUserOperationCompleted, userState);
        }
        
        private void OnsetStatusUserOperationCompleted(object arg) {
            if ((this.setStatusUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setStatusUserCompleted(this, new setStatusUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getUserInfo(string usergame, string usr, string pass) {
            object[] results = this.Invoke("getUserInfo", new object[] {
                        usergame,
                        usr,
                        pass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserInfoAsync(string usergame, string usr, string pass) {
            this.getUserInfoAsync(usergame, usr, pass, null);
        }
        
        /// <remarks/>
        public void getUserInfoAsync(string usergame, string usr, string pass, object userState) {
            if ((this.getUserInfoOperationCompleted == null)) {
                this.getUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserInfoOperationCompleted);
            }
            this.InvokeAsync("getUserInfo", new object[] {
                        usergame,
                        usr,
                        pass}, this.getUserInfoOperationCompleted, userState);
        }
        
        private void OngetUserInfoOperationCompleted(object arg) {
            if ((this.getUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserInfoCompleted(this, new getUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/topupMoneyByPortal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] topupMoneyByPortal(string usergame, int money, string topupDate, string userGate, string transID, string paymentGate, string usr, string pass) {
            object[] results = this.Invoke("topupMoneyByPortal", new object[] {
                        usergame,
                        money,
                        topupDate,
                        userGate,
                        transID,
                        paymentGate,
                        usr,
                        pass});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void topupMoneyByPortalAsync(string usergame, int money, string topupDate, string userGate, string transID, string paymentGate, string usr, string pass) {
            this.topupMoneyByPortalAsync(usergame, money, topupDate, userGate, transID, paymentGate, usr, pass, null);
        }
        
        /// <remarks/>
        public void topupMoneyByPortalAsync(string usergame, int money, string topupDate, string userGate, string transID, string paymentGate, string usr, string pass, object userState) {
            if ((this.topupMoneyByPortalOperationCompleted == null)) {
                this.topupMoneyByPortalOperationCompleted = new System.Threading.SendOrPostCallback(this.OntopupMoneyByPortalOperationCompleted);
            }
            this.InvokeAsync("topupMoneyByPortal", new object[] {
                        usergame,
                        money,
                        topupDate,
                        userGate,
                        transID,
                        paymentGate,
                        usr,
                        pass}, this.topupMoneyByPortalOperationCompleted, userState);
        }
        
        private void OntopupMoneyByPortalOperationCompleted(object arg) {
            if ((this.topupMoneyByPortalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.topupMoneyByPortalCompleted(this, new topupMoneyByPortalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wapGetTopupList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] wapGetTopupList(string usergame, string security) {
            object[] results = this.Invoke("wapGetTopupList", new object[] {
                        usergame,
                        security});
            return ((string[][])(results[0]));
        }
        
        /// <remarks/>
        public void wapGetTopupListAsync(string usergame, string security) {
            this.wapGetTopupListAsync(usergame, security, null);
        }
        
        /// <remarks/>
        public void wapGetTopupListAsync(string usergame, string security, object userState) {
            if ((this.wapGetTopupListOperationCompleted == null)) {
                this.wapGetTopupListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwapGetTopupListOperationCompleted);
            }
            this.InvokeAsync("wapGetTopupList", new object[] {
                        usergame,
                        security}, this.wapGetTopupListOperationCompleted, userState);
        }
        
        private void OnwapGetTopupListOperationCompleted(object arg) {
            if ((this.wapGetTopupListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wapGetTopupListCompleted(this, new wapGetTopupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wapGetTopupListByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] wapGetTopupListByID(string usergame, string topupid, string security) {
            object[] results = this.Invoke("wapGetTopupListByID", new object[] {
                        usergame,
                        topupid,
                        security});
            return ((string[][])(results[0]));
        }
        
        /// <remarks/>
        public void wapGetTopupListByIDAsync(string usergame, string topupid, string security) {
            this.wapGetTopupListByIDAsync(usergame, topupid, security, null);
        }
        
        /// <remarks/>
        public void wapGetTopupListByIDAsync(string usergame, string topupid, string security, object userState) {
            if ((this.wapGetTopupListByIDOperationCompleted == null)) {
                this.wapGetTopupListByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwapGetTopupListByIDOperationCompleted);
            }
            this.InvokeAsync("wapGetTopupListByID", new object[] {
                        usergame,
                        topupid,
                        security}, this.wapGetTopupListByIDOperationCompleted, userState);
        }
        
        private void OnwapGetTopupListByIDOperationCompleted(object arg) {
            if ((this.wapGetTopupListByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wapGetTopupListByIDCompleted(this, new wapGetTopupListByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wapTopupMoney", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] wapTopupMoney(string usergame, string keyword, int shortcode, int money, string transID, string security) {
            object[] results = this.Invoke("wapTopupMoney", new object[] {
                        usergame,
                        keyword,
                        shortcode,
                        money,
                        transID,
                        security});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void wapTopupMoneyAsync(string usergame, string keyword, int shortcode, int money, string transID, string security) {
            this.wapTopupMoneyAsync(usergame, keyword, shortcode, money, transID, security, null);
        }
        
        /// <remarks/>
        public void wapTopupMoneyAsync(string usergame, string keyword, int shortcode, int money, string transID, string security, object userState) {
            if ((this.wapTopupMoneyOperationCompleted == null)) {
                this.wapTopupMoneyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwapTopupMoneyOperationCompleted);
            }
            this.InvokeAsync("wapTopupMoney", new object[] {
                        usergame,
                        keyword,
                        shortcode,
                        money,
                        transID,
                        security}, this.wapTopupMoneyOperationCompleted, userState);
        }
        
        private void OnwapTopupMoneyOperationCompleted(object arg) {
            if ((this.wapTopupMoneyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wapTopupMoneyCompleted(this, new wapTopupMoneyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wapGetNotifyMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string wapGetNotifyMessage(string usergame, string security) {
            object[] results = this.Invoke("wapGetNotifyMessage", new object[] {
                        usergame,
                        security});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void wapGetNotifyMessageAsync(string usergame, string security) {
            this.wapGetNotifyMessageAsync(usergame, security, null);
        }
        
        /// <remarks/>
        public void wapGetNotifyMessageAsync(string usergame, string security, object userState) {
            if ((this.wapGetNotifyMessageOperationCompleted == null)) {
                this.wapGetNotifyMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwapGetNotifyMessageOperationCompleted);
            }
            this.InvokeAsync("wapGetNotifyMessage", new object[] {
                        usergame,
                        security}, this.wapGetNotifyMessageOperationCompleted, userState);
        }
        
        private void OnwapGetNotifyMessageOperationCompleted(object arg) {
            if ((this.wapGetNotifyMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wapGetNotifyMessageCompleted(this, new wapGetNotifyMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/testArray", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] testArray(string id, string value) {
            object[] results = this.Invoke("testArray", new object[] {
                        id,
                        value});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void testArrayAsync(string id, string value) {
            this.testArrayAsync(id, value, null);
        }
        
        /// <remarks/>
        public void testArrayAsync(string id, string value, object userState) {
            if ((this.testArrayOperationCompleted == null)) {
                this.testArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestArrayOperationCompleted);
            }
            this.InvokeAsync("testArray", new object[] {
                        id,
                        value}, this.testArrayOperationCompleted, userState);
        }
        
        private void OntestArrayOperationCompleted(object arg) {
            if ((this.testArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testArrayCompleted(this, new testArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void add_MoneyByUsernameCompletedEventHandler(object sender, add_MoneyByUsernameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class add_MoneyByUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal add_MoneyByUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void kick_UserOnlineCompletedEventHandler(object sender, kick_UserOnlineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class kick_UserOnlineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal kick_UserOnlineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void setStatusUserCompletedEventHandler(object sender, setStatusUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setStatusUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setStatusUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getUserInfoCompletedEventHandler(object sender, getUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void topupMoneyByPortalCompletedEventHandler(object sender, topupMoneyByPortalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class topupMoneyByPortalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal topupMoneyByPortalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void wapGetTopupListCompletedEventHandler(object sender, wapGetTopupListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wapGetTopupListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wapGetTopupListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void wapGetTopupListByIDCompletedEventHandler(object sender, wapGetTopupListByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wapGetTopupListByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wapGetTopupListByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void wapTopupMoneyCompletedEventHandler(object sender, wapTopupMoneyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wapTopupMoneyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wapTopupMoneyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void wapGetNotifyMessageCompletedEventHandler(object sender, wapGetNotifyMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wapGetNotifyMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wapGetNotifyMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void testArrayCompletedEventHandler(object sender, testArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class testArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal testArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591
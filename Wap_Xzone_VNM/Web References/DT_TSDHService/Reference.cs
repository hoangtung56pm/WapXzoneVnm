//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18033.
// 
#pragma warning disable 1591

namespace WapXzone_VNM.DT_TSDHService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IServiceController", Namespace="http://tempuri.org/")]
    public partial class ServiceController : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback QueryDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryUniversityPointOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDepartmentPointOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryUniversityRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDepartmentRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryAdviseUniversityOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryAdviseDepartmentOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ServiceController() {
            this.Url = global::WapXzone_VNM.Properties.Settings.Default.WapXzone_VNM_DT_TSDHService_ServiceController;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event QueryDataCompletedEventHandler QueryDataCompleted;
        
        /// <remarks/>
        public event QueryOrderCompletedEventHandler QueryOrderCompleted;
        
        /// <remarks/>
        public event QueryUniversityPointCompletedEventHandler QueryUniversityPointCompleted;
        
        /// <remarks/>
        public event QueryDepartmentPointCompletedEventHandler QueryDepartmentPointCompleted;
        
        /// <remarks/>
        public event QueryUniversityRateCompletedEventHandler QueryUniversityRateCompleted;
        
        /// <remarks/>
        public event QueryDepartmentRateCompletedEventHandler QueryDepartmentRateCompleted;
        
        /// <remarks/>
        public event QueryAllCompletedEventHandler QueryAllCompleted;
        
        /// <remarks/>
        public event QueryAdviseUniversityCompletedEventHandler QueryAdviseUniversityCompleted;
        
        /// <remarks/>
        public event QueryAdviseDepartmentCompletedEventHandler QueryAdviseDepartmentCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceController/QueryData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ResultData QueryData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string smsId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string candidateNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string commandCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string serviceId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partnerId) {
            object[] results = this.Invoke("QueryData", new object[] {
                        smsId,
                        candidateNumber,
                        requestId,
                        commandCode,
                        serviceId,
                        partnerId});
            return ((ResultData)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDataAsync(string smsId, string candidateNumber, string requestId, string commandCode, string serviceId, string partnerId) {
            this.QueryDataAsync(smsId, candidateNumber, requestId, commandCode, serviceId, partnerId, null);
        }
        
        /// <remarks/>
        public void QueryDataAsync(string smsId, string candidateNumber, string requestId, string commandCode, string serviceId, string partnerId, object userState) {
            if ((this.QueryDataOperationCompleted == null)) {
                this.QueryDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDataOperationCompleted);
            }
            this.InvokeAsync("QueryData", new object[] {
                        smsId,
                        candidateNumber,
                        requestId,
                        commandCode,
                        serviceId,
                        partnerId}, this.QueryDataOperationCompleted, userState);
        }
        
        private void OnQueryDataOperationCompleted(object arg) {
            if ((this.QueryDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDataCompleted(this, new QueryDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceController/QueryOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ResultData QueryOrder([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string smsId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string candidateNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string commandCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string serviceId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partnerId) {
            object[] results = this.Invoke("QueryOrder", new object[] {
                        smsId,
                        candidateNumber,
                        requestId,
                        commandCode,
                        serviceId,
                        partnerId});
            return ((ResultData)(results[0]));
        }
        
        /// <remarks/>
        public void QueryOrderAsync(string smsId, string candidateNumber, string requestId, string commandCode, string serviceId, string partnerId) {
            this.QueryOrderAsync(smsId, candidateNumber, requestId, commandCode, serviceId, partnerId, null);
        }
        
        /// <remarks/>
        public void QueryOrderAsync(string smsId, string candidateNumber, string requestId, string commandCode, string serviceId, string partnerId, object userState) {
            if ((this.QueryOrderOperationCompleted == null)) {
                this.QueryOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryOrderOperationCompleted);
            }
            this.InvokeAsync("QueryOrder", new object[] {
                        smsId,
                        candidateNumber,
                        requestId,
                        commandCode,
                        serviceId,
                        partnerId}, this.QueryOrderOperationCompleted, userState);
        }
        
        private void OnQueryOrderOperationCompleted(object arg) {
            if ((this.QueryOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryOrderCompleted(this, new QueryOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceController/QueryUniversityPoint", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ResultData QueryUniversityPoint([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string smsId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string universityCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string commandCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string serviceId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partnerId) {
            object[] results = this.Invoke("QueryUniversityPoint", new object[] {
                        smsId,
                        universityCode,
                        requestId,
                        commandCode,
                        serviceId,
                        partnerId});
            return ((ResultData)(results[0]));
        }
        
        /// <remarks/>
        public void QueryUniversityPointAsync(string smsId, string universityCode, string requestId, string commandCode, string serviceId, string partnerId) {
            this.QueryUniversityPointAsync(smsId, universityCode, requestId, commandCode, serviceId, partnerId, null);
        }
        
        /// <remarks/>
        public void QueryUniversityPointAsync(string smsId, string universityCode, string requestId, string commandCode, string serviceId, string partnerId, object userState) {
            if ((this.QueryUniversityPointOperationCompleted == null)) {
                this.QueryUniversityPointOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryUniversityPointOperationCompleted);
            }
            this.InvokeAsync("QueryUniversityPoint", new object[] {
                        smsId,
                        universityCode,
                        requestId,
                        commandCode,
                        serviceId,
                        partnerId}, this.QueryUniversityPointOperationCompleted, userState);
        }
        
        private void OnQueryUniversityPointOperationCompleted(object arg) {
            if ((this.QueryUniversityPointCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryUniversityPointCompleted(this, new QueryUniversityPointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceController/QueryDepartmentPoint", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ResultData QueryDepartmentPoint([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string smsId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string universityCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string departmentCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string commandCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string serviceId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partnerId) {
            object[] results = this.Invoke("QueryDepartmentPoint", new object[] {
                        smsId,
                        universityCode,
                        departmentCode,
                        requestId,
                        commandCode,
                        serviceId,
                        partnerId});
            return ((ResultData)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDepartmentPointAsync(string smsId, string universityCode, string departmentCode, string requestId, string commandCode, string serviceId, string partnerId) {
            this.QueryDepartmentPointAsync(smsId, universityCode, departmentCode, requestId, commandCode, serviceId, partnerId, null);
        }
        
        /// <remarks/>
        public void QueryDepartmentPointAsync(string smsId, string universityCode, string departmentCode, string requestId, string commandCode, string serviceId, string partnerId, object userState) {
            if ((this.QueryDepartmentPointOperationCompleted == null)) {
                this.QueryDepartmentPointOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDepartmentPointOperationCompleted);
            }
            this.InvokeAsync("QueryDepartmentPoint", new object[] {
                        smsId,
                        universityCode,
                        departmentCode,
                        requestId,
                        commandCode,
                        serviceId,
                        partnerId}, this.QueryDepartmentPointOperationCompleted, userState);
        }
        
        private void OnQueryDepartmentPointOperationCompleted(object arg) {
            if ((this.QueryDepartmentPointCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDepartmentPointCompleted(this, new QueryDepartmentPointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceController/QueryUniversityRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ResultData QueryUniversityRate([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string smsId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string universityCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string commandCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string serviceId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partnerId) {
            object[] results = this.Invoke("QueryUniversityRate", new object[] {
                        smsId,
                        universityCode,
                        requestId,
                        commandCode,
                        serviceId,
                        partnerId});
            return ((ResultData)(results[0]));
        }
        
        /// <remarks/>
        public void QueryUniversityRateAsync(string smsId, string universityCode, string requestId, string commandCode, string serviceId, string partnerId) {
            this.QueryUniversityRateAsync(smsId, universityCode, requestId, commandCode, serviceId, partnerId, null);
        }
        
        /// <remarks/>
        public void QueryUniversityRateAsync(string smsId, string universityCode, string requestId, string commandCode, string serviceId, string partnerId, object userState) {
            if ((this.QueryUniversityRateOperationCompleted == null)) {
                this.QueryUniversityRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryUniversityRateOperationCompleted);
            }
            this.InvokeAsync("QueryUniversityRate", new object[] {
                        smsId,
                        universityCode,
                        requestId,
                        commandCode,
                        serviceId,
                        partnerId}, this.QueryUniversityRateOperationCompleted, userState);
        }
        
        private void OnQueryUniversityRateOperationCompleted(object arg) {
            if ((this.QueryUniversityRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryUniversityRateCompleted(this, new QueryUniversityRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceController/QueryDepartmentRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ResultData QueryDepartmentRate([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string smsId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string universityCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string departmentCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string commandCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string serviceId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partnerId) {
            object[] results = this.Invoke("QueryDepartmentRate", new object[] {
                        smsId,
                        universityCode,
                        departmentCode,
                        requestId,
                        commandCode,
                        serviceId,
                        partnerId});
            return ((ResultData)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDepartmentRateAsync(string smsId, string universityCode, string departmentCode, string requestId, string commandCode, string serviceId, string partnerId) {
            this.QueryDepartmentRateAsync(smsId, universityCode, departmentCode, requestId, commandCode, serviceId, partnerId, null);
        }
        
        /// <remarks/>
        public void QueryDepartmentRateAsync(string smsId, string universityCode, string departmentCode, string requestId, string commandCode, string serviceId, string partnerId, object userState) {
            if ((this.QueryDepartmentRateOperationCompleted == null)) {
                this.QueryDepartmentRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDepartmentRateOperationCompleted);
            }
            this.InvokeAsync("QueryDepartmentRate", new object[] {
                        smsId,
                        universityCode,
                        departmentCode,
                        requestId,
                        commandCode,
                        serviceId,
                        partnerId}, this.QueryDepartmentRateOperationCompleted, userState);
        }
        
        private void OnQueryDepartmentRateOperationCompleted(object arg) {
            if ((this.QueryDepartmentRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDepartmentRateCompleted(this, new QueryDepartmentRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceController/QueryAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ResultData QueryAll([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string smsId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string candidateNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string commandCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string serviceId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partnerId) {
            object[] results = this.Invoke("QueryAll", new object[] {
                        smsId,
                        candidateNumber,
                        requestId,
                        commandCode,
                        serviceId,
                        partnerId});
            return ((ResultData)(results[0]));
        }
        
        /// <remarks/>
        public void QueryAllAsync(string smsId, string candidateNumber, string requestId, string commandCode, string serviceId, string partnerId) {
            this.QueryAllAsync(smsId, candidateNumber, requestId, commandCode, serviceId, partnerId, null);
        }
        
        /// <remarks/>
        public void QueryAllAsync(string smsId, string candidateNumber, string requestId, string commandCode, string serviceId, string partnerId, object userState) {
            if ((this.QueryAllOperationCompleted == null)) {
                this.QueryAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryAllOperationCompleted);
            }
            this.InvokeAsync("QueryAll", new object[] {
                        smsId,
                        candidateNumber,
                        requestId,
                        commandCode,
                        serviceId,
                        partnerId}, this.QueryAllOperationCompleted, userState);
        }
        
        private void OnQueryAllOperationCompleted(object arg) {
            if ((this.QueryAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryAllCompleted(this, new QueryAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceController/QueryAdviseUniversity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ResultData QueryAdviseUniversity([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string smsId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string universityCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string commandCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string serviceId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partnerId) {
            object[] results = this.Invoke("QueryAdviseUniversity", new object[] {
                        smsId,
                        universityCode,
                        requestId,
                        commandCode,
                        serviceId,
                        partnerId});
            return ((ResultData)(results[0]));
        }
        
        /// <remarks/>
        public void QueryAdviseUniversityAsync(string smsId, string universityCode, string requestId, string commandCode, string serviceId, string partnerId) {
            this.QueryAdviseUniversityAsync(smsId, universityCode, requestId, commandCode, serviceId, partnerId, null);
        }
        
        /// <remarks/>
        public void QueryAdviseUniversityAsync(string smsId, string universityCode, string requestId, string commandCode, string serviceId, string partnerId, object userState) {
            if ((this.QueryAdviseUniversityOperationCompleted == null)) {
                this.QueryAdviseUniversityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryAdviseUniversityOperationCompleted);
            }
            this.InvokeAsync("QueryAdviseUniversity", new object[] {
                        smsId,
                        universityCode,
                        requestId,
                        commandCode,
                        serviceId,
                        partnerId}, this.QueryAdviseUniversityOperationCompleted, userState);
        }
        
        private void OnQueryAdviseUniversityOperationCompleted(object arg) {
            if ((this.QueryAdviseUniversityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryAdviseUniversityCompleted(this, new QueryAdviseUniversityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceController/QueryAdviseDepartment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ResultData QueryAdviseDepartment([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string smsId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string universityCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string departmentCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string commandCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string serviceId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partnerId) {
            object[] results = this.Invoke("QueryAdviseDepartment", new object[] {
                        smsId,
                        universityCode,
                        departmentCode,
                        requestId,
                        commandCode,
                        serviceId,
                        partnerId});
            return ((ResultData)(results[0]));
        }
        
        /// <remarks/>
        public void QueryAdviseDepartmentAsync(string smsId, string universityCode, string departmentCode, string requestId, string commandCode, string serviceId, string partnerId) {
            this.QueryAdviseDepartmentAsync(smsId, universityCode, departmentCode, requestId, commandCode, serviceId, partnerId, null);
        }
        
        /// <remarks/>
        public void QueryAdviseDepartmentAsync(string smsId, string universityCode, string departmentCode, string requestId, string commandCode, string serviceId, string partnerId, object userState) {
            if ((this.QueryAdviseDepartmentOperationCompleted == null)) {
                this.QueryAdviseDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryAdviseDepartmentOperationCompleted);
            }
            this.InvokeAsync("QueryAdviseDepartment", new object[] {
                        smsId,
                        universityCode,
                        departmentCode,
                        requestId,
                        commandCode,
                        serviceId,
                        partnerId}, this.QueryAdviseDepartmentOperationCompleted, userState);
        }
        
        private void OnQueryAdviseDepartmentOperationCompleted(object arg) {
            if ((this.QueryAdviseDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryAdviseDepartmentCompleted(this, new QueryAdviseDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18033")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DataEntities")]
    public partial class ResultData {
        
        private int errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string messageField;
        
        /// <remarks/>
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ErrorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryDataCompletedEventHandler(object sender, QueryDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryOrderCompletedEventHandler(object sender, QueryOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryUniversityPointCompletedEventHandler(object sender, QueryUniversityPointCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryUniversityPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryUniversityPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryDepartmentPointCompletedEventHandler(object sender, QueryDepartmentPointCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDepartmentPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDepartmentPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryUniversityRateCompletedEventHandler(object sender, QueryUniversityRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryUniversityRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryUniversityRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryDepartmentRateCompletedEventHandler(object sender, QueryDepartmentRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDepartmentRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDepartmentRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryAllCompletedEventHandler(object sender, QueryAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryAdviseUniversityCompletedEventHandler(object sender, QueryAdviseUniversityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryAdviseUniversityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryAdviseUniversityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryAdviseDepartmentCompletedEventHandler(object sender, QueryAdviseDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryAdviseDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryAdviseDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultData)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591